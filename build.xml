<?xml version ="1.0" encoding="UTF-8" ?><project name="build" basedir=".">  <!-- directory properties -->	  <property name="src.dir" location="${basedir}/sources/java/" />  <property name="classes.dir" location="${basedir}/build/classes/" />  <property name="commons-cli.jar.dir" location="/usr/share/java/apache-commons-cli-1.2/commons-cli-1.2.jar" />  <property name="servlet.jar.dir" location="/Users/federico/Uni/java/libraries/servlet-api.jar" />  <property name="laiUtils.jav.dir" location="/Users/federico/Uni/java/libraries/lai-1.0.1.jar" />  <property name="httpClient.jar.dir" location="/Users/federico/Uni/java/libraries/httpclient-4.0-beta2.jar" />  <property name="httpCore.jar.dir" location="/Users/federico/Uni/java/libraries/httpcore-4.0-beta3.jar" />  <!-- server properties -->	  <!-- nota: queste properties sono usate da clients come curl -->  <!--  <property name="host" value="192.168.56.2" />  <property name="port" value="8080" />  -->  <property name="host" value="localhost" />  <property name="port" value="2020" />  <property name="base.url" value="http://${host}:${port}" />  <!-- nota: il client com.hotel.client.Client usa le configurazioni in    			 com/hotel/client/beans.xml. L'indirizzo degli endpoint e' cablato  			 nel file. In fase di debug gli indirizzi hanno (host, porta) =   			 = (localhost, 2020) in modo da scegliere la macchina server   			 eseguendo un programma proxy con una socket collegata sulla   			 (localhost, 2020) e un'altra sulla (${host}, ${port})   			 -->  <!-- paths -->	  <path id="cxf.classpath">    <pathElement path="/usr/share/java/apache-cxf-2.2.6/lib/FastInfoset-1.2.7.jar:/usr/share/java/apache-cxf-2.2.6/lib/XmlSchema-1.4.5.jar:/usr/share/java/apache-cxf-2.2.6/lib/abdera-core-0.4.0-incubating.jar:/usr/share/java/apache-cxf-2.2.6/lib/abdera-extensions-json-0.4.0-incubating.jar:/usr/share/java/apache-cxf-2.2.6/lib/abdera-extensions-main-0.4.0-incubating.jar:/usr/share/java/apache-cxf-2.2.6/lib/abdera-i18n-0.4.0-incubating.jar:/usr/share/java/apache-cxf-2.2.6/lib/abdera-parser-0.4.0-incubating.jar:/usr/share/java/apache-cxf-2.2.6/lib/ant-1.6.5.jar:/usr/share/java/apache-cxf-2.2.6/lib/antlr-2.7.7.jar:/usr/share/java/apache-cxf-2.2.6/lib/aopalliance-1.0.jar:/usr/share/java/apache-cxf-2.2.6/lib/asm-2.2.3.jar:/usr/share/java/apache-cxf-2.2.6/lib/axiom-api-1.2.7.jar:/usr/share/java/apache-cxf-2.2.6/lib/axiom-impl-1.2.7.jar:/usr/share/java/apache-cxf-2.2.6/lib/bcprov-jdk15-1.43.jar:/usr/share/java/apache-cxf-2.2.6/lib/commons-codec-1.3.jar:/usr/share/java/apache-cxf-2.2.6/lib/commons-collections-3.2.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/commons-lang-2.4.jar:/usr/share/java/apache-cxf-2.2.6/lib/commons-logging-1.1.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/commons-pool-1.5.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/cxf-2.2.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/cxf-manifest.jar:/usr/share/java/apache-cxf-2.2.6/lib/cxf-xjc-boolean-2.2.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/cxf-xjc-bug671-2.2.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/cxf-xjc-dv-2.2.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/cxf-xjc-ts-2.2.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-activation_1.1_spec-1.0.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-annotation_1.0_spec-1.1.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-javamail_1.4_spec-1.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-jaxws_2.1_spec-1.0.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-jms_1.1_spec-1.1.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-servlet_2.5_spec-1.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-stax-api_1.0_spec-1.0.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/geronimo-ws-metadata_2.0_spec-1.1.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/jaxb-api-2.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/jaxb-impl-2.1.12.jar:/usr/share/java/apache-cxf-2.2.6/lib/jaxb-xjc-2.1.12.jar:/usr/share/java/apache-cxf-2.2.6/lib/jaxen-1.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/jettison-1.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/jetty-6.1.21.jar:/usr/share/java/apache-cxf-2.2.6/lib/jetty-util-6.1.21.jar:/usr/share/java/apache-cxf-2.2.6/lib/jra-1.0-alpha-4.jar:/usr/share/java/apache-cxf-2.2.6/lib/js-1.7R1.jar:/usr/share/java/apache-cxf-2.2.6/lib/jsr311-api-1.0.jar:/usr/share/java/apache-cxf-2.2.6/lib/neethi-2.0.4.jar:/usr/share/java/apache-cxf-2.2.6/lib/oro-2.0.8.jar:/usr/share/java/apache-cxf-2.2.6/lib/saaj-api-1.3.jar:/usr/share/java/apache-cxf-2.2.6/lib/saaj-impl-1.3.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/serializer-2.7.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/slf4j-api-1.5.8.jar:/usr/share/java/apache-cxf-2.2.6/lib/slf4j-jdk14-1.5.8.jar:/usr/share/java/apache-cxf-2.2.6/lib/spring-beans-2.5.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/spring-context-2.5.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/spring-context-support-2.5.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/spring-core-2.5.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/spring-jms-2.5.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/spring-tx-2.5.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/spring-web-2.5.6.jar:/usr/share/java/apache-cxf-2.2.6/lib/velocity-1.6.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/wsdl4j-1.6.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/wss4j-1.5.8.jar:/usr/share/java/apache-cxf-2.2.6/lib/wstx-asl-3.2.9.jar:/usr/share/java/apache-cxf-2.2.6/lib/xalan-2.7.1.jar:/usr/share/java/apache-cxf-2.2.6/lib/xml-resolver-1.2.jar:/usr/share/java/apache-cxf-2.2.6/lib/xmlbeans-2.4.0.jar:/usr/share/java/apache-cxf-2.2.6/lib/xmlsec-1.4.3.jar" />  </path>	  <path id="cxf2.4.2.classpath">    <pathElement path="/usr/share/java/apache-cxf-2.4.2/lib/FastInfoset-1.2.9.jar:/usr/share/java/apache-cxf-2.4.2/lib/antlr-2.7.7.jar:/usr/share/java/apache-cxf-2.4.2/lib/aopalliance-1.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/asm-3.3.jar:/usr/share/java/apache-cxf-2.4.2/lib/commons-collections-3.2.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/commons-lang-2.6.jar:/usr/share/java/apache-cxf-2.4.2/lib/commons-logging-1.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/cxf-2.4.2.jar:/usr/share/java/apache-cxf-2.4.2/lib/cxf-manifest.jar:/usr/share/java/apache-cxf-2.4.2/lib/cxf-xjc-boolean-2.4.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/cxf-xjc-bug671-2.4.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/cxf-xjc-dv-2.4.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/cxf-xjc-ts-2.4.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-activation_1.1_spec-1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-annotation_1.0_spec-1.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-javamail_1.4_spec-1.7.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-jaxws_2.2_spec-1.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-jms_1.1_spec-1.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-servlet_3.0_spec-1.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-stax-api_1.0_spec-1.0.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/geronimo-ws-metadata_2.0_spec-1.1.3.jar:/usr/share/java/apache-cxf-2.4.2/lib/isorelax-20030108.jar:/usr/share/java/apache-cxf-2.4.2/lib/jaxb-api-2.2.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/jaxb-impl-2.2.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/jaxb-xjc-2.2.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/jettison-1.3.jar:/usr/share/java/apache-cxf-2.4.2/lib/jetty-continuation-7.4.5.v20110725.jar:/usr/share/java/apache-cxf-2.4.2/lib/jetty-http-7.4.5.v20110725.jar:/usr/share/java/apache-cxf-2.4.2/lib/jetty-io-7.4.5.v20110725.jar:/usr/share/java/apache-cxf-2.4.2/lib/jetty-security-7.4.5.v20110725.jar:/usr/share/java/apache-cxf-2.4.2/lib/jetty-server-7.4.5.v20110725.jar:/usr/share/java/apache-cxf-2.4.2/lib/jetty-util-7.4.5.v20110725.jar:/usr/share/java/apache-cxf-2.4.2/lib/joda-time-1.6.2.jar:/usr/share/java/apache-cxf-2.4.2/lib/jra-1.0-alpha-4.jar:/usr/share/java/apache-cxf-2.4.2/lib/js-1.7R2.jar:/usr/share/java/apache-cxf-2.4.2/lib/jsr311-api-1.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/msv-core-2010.2.jar:/usr/share/java/apache-cxf-2.4.2/lib/neethi-3.0.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/opensaml-2.4.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/openws-1.4.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/relaxngDatatype-20020414.jar:/usr/share/java/apache-cxf-2.4.2/lib/saaj-api-1.3.jar:/usr/share/java/apache-cxf-2.4.2/lib/saaj-impl-1.3.2.jar:/usr/share/java/apache-cxf-2.4.2/lib/serializer-2.7.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/slf4j-api-1.6.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/slf4j-jdk14-1.6.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-aop-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-asm-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-beans-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-context-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-core-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-expression-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-jms-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-tx-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/spring-web-3.0.5.RELEASE.jar:/usr/share/java/apache-cxf-2.4.2/lib/stax2-api-3.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/velocity-1.7.jar:/usr/share/java/apache-cxf-2.4.2/lib/woodstox-core-asl-4.1.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/wsdl4j-1.6.2.jar:/usr/share/java/apache-cxf-2.4.2/lib/wss4j-1.6.2.jar:/usr/share/java/apache-cxf-2.4.2/lib/xalan-2.7.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/xml-resolver-1.2.jar:/usr/share/java/apache-cxf-2.4.2/lib/xmlbeans-2.4.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/xmlschema-core-2.0.jar:/usr/share/java/apache-cxf-2.4.2/lib/xmlsec-1.4.5.jar:/usr/share/java/apache-cxf-2.4.2/lib/xmltooling-1.3.1.jar:/usr/share/java/apache-cxf-2.4.2/lib/xsdlib-2010.1.jar" />  </path>   <path id="client.classpath">    <pathElement location="${commons-cli.jar.dir}" />    <pathElement location="${classes.dir}" />    <path refid="cxf.classpath" />  </path>	  <path id="client.buildpath">    <pathElement location="${commons-cli.jar.dir}" />    <path refid="cxf2.4.2.classpath" />  	<pathElement location="${servlet.jar.dir}" />  	<pathElement location="${laiUtils.jav.dir}" />  	<pathelement location="${httpClient.jar.dir}" />  	<pathElement location="${httpCore.jar.dir}" />  </path>  <path id="xmlTest.classpath">    <pathElement location="${commons-cli.jar.dir}" />    <pathElement location="${classes.dir}" />  </path>  <!-- Tests -->  <macrodef name="XmlTest">    <attribute name="args" />  	<sequential>      <java classname="com.hotel.test.XmlTest" fork="yes">        <arg line="@{args}" />        <classpath refid="xmlTest.classpath" />      </java>  	</sequential>  </macrodef>  <target name="test_validateSoapDocument"	  description="esegue il test validateSoapDocument">    <XmlTest args="-o test_validateSoapDocument" />  </target>  <target name="test_getSOAPElements"	  description="esegue il test getSOAPElements">    <XmlTest args="-o test_getSOAPElements --verbose 0" />  </target>  <target name="test_validateXmlDocument"	  description="esegue il test validateXmlDocument">    <XmlTest args="-o test_validateXmlDocument" />  </target>    <target name="curl_testRicerca1"	  description="esegue una ricerca valida con curl. Argomenti={endpoint='/proxy'}">  	<property name="endpoint" value="/proxy" />    <exec executable="curl">      <arg line="${base.url}/hotel${endpoint} -d @xml_testFiles/soap_ricerca1.xml" />      <arg line="--trace-ascii tmpout-test11.txt" />    </exec>  </target>	  <target name="curl_testRicerca2"		  description="esegue una ricerca non valida (contenuto applicativo) con curl. Argomenti={endpoint='/proxy'}">  	<property name="endpoint" value="/proxy" />    <exec executable="curl">      <arg line="${base.url}/hotel${endpoint} -d @xml_testFiles/soap_ricerca2_notValid.xml" />      <arg line="--trace-ascii tmpout-test11.txt" />    </exec>  </target>	  <target name="curl_testRicerca3"		  description="esegue una ricerca non valida (soap:Body vuoto) con curl. Argomenti={endpoint='/proxy'}">  	<property name="endpoint" value="/proxy" />    <exec executable="curl">      <arg line="${base.url}/hotel${endpoint} -d @xml_testFiles/soap_emptyBody.xml" />      <arg line="--trace-ascii tmpout-test11.txt" />    </exec>  </target>	  <target name="curl_testPrenotazione"		  description="esegue una prenotazione valida con curl">	    <exec executable="curl">      <arg line="${base.url}/hotel/proxy -d @xml_testFiles/soap_prenotazione1.xml" />      <arg line="--trace-ascii tmpout-test12.txt" />    </exec>  </target>	  <target name="curl_testPrenotazione2"		  description="esegue una prenotazione non valida (contenuto applicativo) con curl">	    <exec executable="curl">      <arg line="${base.url}/hotel/proxy -d @xml_testFiles/soap_prenotazione1.xml" />      <arg line="--trace-ascii tmpout-test12.txt" />    </exec>  </target>	  <target name="curl_testPrenotazione3"		  description="esegue una prenotazione non valida (soap:Body vuoto) con curl">	    <exec executable="curl">      <arg line="${base.url}/hotel/proxy -d @xml_testFiles/soap_emptyBody.xml" />      <arg line="--trace-ascii tmpout-test12.txt" />    </exec>  </target>  <!-- Clients -->  <target name="client" 	  description="esegue com.hotel.client.Client, con arg1 tutti i parametri">    <java classname="com.hotel.client.Client">      <arg line="${arg1}" />      <classpath refid="client.classpath" />    </java>  </target>    <target name="ricerca"	  description="esegue la ricerca con com.hotel.client.Client, e con arg1 tutti i parametri">    <java classname="com.hotel.client.Client">      <arg line="-o ricerca ${arg1}" />      <classpath refid="client.classpath" />    </java>  </target>  <target name="prenotazione"	  description="esegue la prenotazione con com.hotel.client.Client, e con arg1 tutti i parametri">    <java classname="com.hotel.client.Client">      <arg line="-o prenotazione ${arg1}" />      <classpath refid="client.classpath" />    </java>  </target>  <!-- Utils -->  <target name="stampaXml"	  description="stampa un file XML specificato con arg1">    <!-- richiesto arg1 in ingresso con -Darg1=.. -->    <XmlTest args="-o print ${arg1}" />  </target>  <target name="validaXml"	  description="valida un file XML = ${arg1} con lo schema XSD = ${arg2}">    <XmlTest args="-o validate ${arg1} ${arg2}" />  </target>	  <!-- Build -->	  <target name="buildClient" 		  description="compila il programma client">  	  	<mkdir dir="${classes.dir}"/>  	<mkdir dir="${classes.dir}/etc/"/>  	<mkdir dir="${classes.dir}/keystore/"/>	<javac destdir="${classes.dir}" srcdir="${src.dir}" 		classpathref="client.buildpath"/>  	<copy file="${src.dir}/com/hotel/client/beans.xml"   		todir="${classes.dir}/com/hotel/client/" />  	<copy file="${basedir}/sources/resources/etc/clients-truststore.properties"  		todir="${classes.dir}/etc/" />  	<copy file="${basedir}/sources/resources/keystore/clients-truststore.jks"  		todir="${classes.dir}/keystore" />  </target>	</project>